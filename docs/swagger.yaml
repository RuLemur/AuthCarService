definitions:
  AuthCarService_internal_controller.Error:
    properties:
      message:
        type: string
    type: object
  endpoint.AddCarRequest:
    properties:
      car_name:
        type: string
      mileage:
        type: integer
      model_id:
        type: integer
      production_year:
        type: integer
      user_id:
        type: integer
    type: object
  endpoint.AddCarResponse:
    properties:
      user_car_id:
        type: integer
    type: object
  endpoint.AddUserRequest:
    properties:
      username:
        type: string
    type: object
  endpoint.AddUserResponse:
    properties:
      id:
        type: integer
    type: object
  endpoint.Car:
    properties:
      brand:
        type: string
      engine_type:
        type: string
      equipment:
        type: string
      id:
        type: string
      model:
        type: string
    type: object
  endpoint.CarSearchRequest:
    properties:
      brand:
        type: string
      model:
        type: string
    type: object
  endpoint.CarSearchResponse:
    properties:
      car:
        items:
          $ref: '#/definitions/endpoint.Car'
        type: array
    type: object
  endpoint.GetUserCarsRequest:
    properties:
      user_id:
        type: integer
    type: object
  endpoint.GetUserCarsResponse:
    properties:
      user_cars:
        items:
          $ref: '#/definitions/endpoint.UserCar'
        type: array
      user_id:
        type: integer
    type: object
  endpoint.GetUserResponse:
    properties:
      garage_id:
        type: integer
      id:
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
  endpoint.UserCar:
    properties:
      added_at:
        type: string
      car_name:
        type: string
      id:
        type: integer
      mileage:
        type: integer
      model_id:
        type: integer
      production_year:
        type: integer
    type: object
  internal_controller.Error:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /cars/add:
    post:
      consumes:
      - application/json
      description: add car to user
      parameters:
      - description: Add Car
        in: body
        name: cars
        required: true
        schema:
          $ref: '#/definitions/endpoint.AddCarRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoint.AddCarResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/AuthCarService_internal_controller.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/AuthCarService_internal_controller.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/AuthCarService_internal_controller.Error'
      summary: Add car to user
      tags:
      - Cars
  /cars/search:
    post:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Car Search
        in: body
        name: cars
        required: true
        schema:
          $ref: '#/definitions/endpoint.CarSearchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoint.CarSearchResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/AuthCarService_internal_controller.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/AuthCarService_internal_controller.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/AuthCarService_internal_controller.Error'
      summary: Search car by brand and model
      tags:
      - Cars
  /users/{id}:
    get:
      consumes:
      - application/json
      description: get user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoint.GetUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/AuthCarService_internal_controller.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/AuthCarService_internal_controller.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/AuthCarService_internal_controller.Error'
      summary: Get User
      tags:
      - Users
  /users/add:
    post:
      consumes:
      - application/json
      description: Add new user
      parameters:
      - description: Add User
        in: body
        name: userInfo
        required: true
        schema:
          $ref: '#/definitions/endpoint.AddUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoint.AddUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/AuthCarService_internal_controller.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/AuthCarService_internal_controller.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/AuthCarService_internal_controller.Error'
      summary: Add new user
      tags:
      - Users
  /users/cars:
    post:
      consumes:
      - application/json
      description: Get all cars by user
      parameters:
      - description: Get User Cars
        in: body
        name: userCars
        required: true
        schema:
          $ref: '#/definitions/endpoint.GetUserCarsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoint.GetUserCarsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/AuthCarService_internal_controller.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/AuthCarService_internal_controller.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/AuthCarService_internal_controller.Error'
      summary: Get user cars
      tags:
      - Users
swagger: "2.0"
